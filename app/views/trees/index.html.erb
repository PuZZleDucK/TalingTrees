<div style="display:flex;height:100vh;">
  <div style="flex:1;padding-right:10px;">
    <h1>Trees</h1>
    <ul id="tree-list" style="list-style:none;padding:0;">
      <% @trees.each_with_index do |tree, idx| %>
        <li data-index="<%= idx %>" style="cursor:pointer;padding:4px;">
          <%= tree.name %>
        </li>
      <% end %>
    </ul>

    <div id="map" style="height:400px;"></div>
  </div>
  <div style="flex:1;display:flex;flex-direction:column;border-left:1px solid #ccc;padding-left:10px;">
    <div style="display:flex;align-items:center;margin-bottom:10px;">
      <span style="font-size:24px;margin-right:8px;">ðŸ’¬</span>
      <h2 id="chat-title" style="margin:0;">Chat</h2>
    </div>
    <div id="chat-history" style="overflow-y:auto;border:1px solid #ccc;padding:8px;margin-bottom:10px;">
      <!-- Chat messages will appear here -->
    </div>
    <div style="display:flex;">
      <input type="text" id="chat-input" style="flex:1;padding:5px;" placeholder="Type a message...">
      <button id="chat-submit" style="margin-left:5px;">Send</button>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<style>
  #tree-list li.selected { background-color: #e0f0ff; }
  #chat-history .user-message {
    background-color: #e0ffe0;
    padding: 5px 8px;
    border-radius: 4px;
    margin: 4px 0;
    max-width: 70%;
    display: block;
    width: fit-content;
    margin-left: auto;
  }
  #chat-history .bot-message {
    background-color: #f0e0d0;
    padding: 5px 8px;
    border-radius: 4px;
    margin: 4px 0;
    max-width: 70%;
    display: block;
    width: fit-content;
    margin-right: auto;
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    var trees = <%= raw @trees.to_json(only: [:id, :name, :treedb_lat, :treedb_long]) %>;
    var first = trees[0];
    var lat = first ? first.treedb_lat : 0;
    var lng = first ? first.treedb_long : 0;
    var map = L.map('map').setView([lat, lng], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Map data Â© OpenStreetMap contributors'
    }).addTo(map);
    var markers = [];
    var currentTreeId = null;
    var chatHistory = [];
    trees.forEach(function(tree, idx) {
      if (tree.treedb_lat && tree.treedb_long) {
        var m = L.marker([tree.treedb_lat, tree.treedb_long]).addTo(map).bindPopup(tree.name);
        m.on('click', function(){ selectTree(idx); });
        markers[idx] = m;
      } else {
        markers[idx] = null;
      }
    });

    function highlightListItem(index) {
      document.querySelectorAll('#tree-list li').forEach(function(li) {
        li.classList.toggle('selected', Number(li.dataset.index) === index);
      });
    }

    function selectTree(index) {
      var tree = trees[index];
      if (!tree) return;
      highlightListItem(index);
      if (markers[index]) {
        markers[index].openPopup();
        map.setView(markers[index].getLatLng(), 17);
      }
      document.getElementById('chat-title').textContent = tree.name;
      currentTreeId = tree.id;
      chatHistory = [];
      historyDiv.innerHTML = '';
    }

    document.querySelectorAll('#tree-list li').forEach(function(li){
      li.addEventListener('click', function(){
        var index = Number(li.dataset.index);
        selectTree(index);
      });
    });
    var input = document.getElementById('chat-input');
    var historyDiv = document.getElementById('chat-history');
    document.getElementById('chat-submit').addEventListener('click', function(){
      var text = input.value.trim();
      if (text === '' || !currentTreeId) return;
      var userMsg = {role: 'user', content: text};
      chatHistory.push(userMsg);
      var div = document.createElement('div');
      div.className = 'user-message';
      div.textContent = text;
      historyDiv.appendChild(div);
      input.value = '';
      historyDiv.scrollTop = historyDiv.scrollHeight;

      fetch('/trees/' + currentTreeId + '/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({history: chatHistory})
      }).then(function(response){
        var reader = response.body.getReader();
        var decoder = new TextDecoder();
        var botDiv = document.createElement('div');
        botDiv.className = 'bot-message';
        historyDiv.appendChild(botDiv);
        function read() {
          reader.read().then(function(result){
            if (result.done) {
              chatHistory.push({role: 'assistant', content: botDiv.textContent});
              return;
            }
            botDiv.textContent += decoder.decode(result.value, {stream: true});
            historyDiv.scrollTop = historyDiv.scrollHeight;
            read();
          });
        }
        read();
      });
    });


    input.addEventListener('keydown', function(event) {
      if (event.key === 'Enter' && event.ctrlKey) {
        event.preventDefault();
        document.getElementById('chat-submit').click();
      }
    });

    if (trees.length > 0) {
      selectTree(0);
    }
  });
</script>
