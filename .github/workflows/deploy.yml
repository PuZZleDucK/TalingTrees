name: Deploy

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Render CLI and jq
        run: |
          curl -L https://github.com/render-oss/cli/releases/download/v2.1.4/cli_2.1.4_linux_amd64.zip -o render.zip
          unzip render.zip
          sudo mv cli_v2.1.4 /usr/local/bin/render
          sudo apt-get update && sudo apt-get install -y jq
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          : "${RENDER_API_KEY:?Need RENDER_API_KEY in env}"
          SERVICE_NAME="tree-talker"

          # 1) Switch to the right workspace (optional if already set)
          render -o json --confirm workspace set tree-workspace

          # 2) List & grep for your service
          EXISTING_ID=$(
            render services -o json --confirm \
              | jq -r --arg NAME "$SERVICE_NAME" \
                  '.[] | select(.name == $NAME) | .id'
          )

          if [[ -n "$EXISTING_ID" ]]; then
            echo "‚úÖ Found $SERVICE_NAME (ID: $EXISTING_ID)"
            SERVICE_ID="$EXISTING_ID"
          else
            echo "‚öôÔ∏è Creating $SERVICE_NAME‚Ä¶"
            SERVICE_ID=$(
              render services create web \
                --name "$SERVICE_NAME" \
                --env ruby \
                --region oregon \
                --repo "https://github.com/${GITHUB_REPOSITORY}.git" \
                --branch main \
                --build-command "bundle install && yarn install && rake assets:precompile" \
                --start-command "bundle exec puma -C config/puma.rb" \
                --output json \
                --confirm \
              | jq -r '.id'
            )
            echo "‚úÖ Created $SERVICE_NAME (ID: $SERVICE_ID)"
          fi

          # 3) (Re)configure your rake‚Äêrelease hook if needed
          render services update "$SERVICE_ID" \
            --release-command "bundle exec rake db:migrate && bundle exec rake tree:talker:setup && bundle exec rake cache:warmup" \
            --output json \
            --confirm

          # 4) Trigger the deploy
          echo "üöÄ Deploying $SERVICE_NAME‚Ä¶"
          render deploys create "$SERVICE_ID" \
            --branch main \
            --output json \
            --confirm
