name: Deploy

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Render CLI and jq
        run: |
          curl -L https://github.com/render-oss/cli/releases/download/v2.1.4/cli_2.1.4_linux_amd64.zip -o render.zip
          unzip render.zip
          sudo mv cli_v2.1.4 /usr/local/bin/render
          sudo apt-get update && sudo apt-get install -y jq
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          # ─── 0) Ensure RENDER_API_KEY is set ─────────────────────────────────────────
          : "${RENDER_API_KEY:?Need to set RENDER_API_KEY env var}"

          SERVICE_NAME="tree-talker"

          # ─── 1) (Optional) switch workspace ──────────────────────────────────────────
          render workspace set tree-workspace \
            --output json \
            --confirm >/dev/null

          # ─── 2) Lookup the existing service ──────────────────────────────────────────
          SERVICE_ID=$(
            render services \
              --output json \
              --confirm \
            | jq -r --arg NAME "$SERVICE_NAME" '
                .[]?
                | select(.name == $NAME)
                | .id
              // empty
              '
          )

          if [[ -z "$SERVICE_ID" ]]; then
            echo "❌ Service '$SERVICE_NAME' not found in workspace. Exiting."
            exit 1
          fi

          echo "✅ Using service '$SERVICE_NAME' (ID: $SERVICE_ID)"

          # ─── 3) (Re)configure your Rake‐release hook ─────────────────────────────────
          render services update "$SERVICE_ID" \
            --release-command "bundle exec rake db:migrate && bundle exec rake cache:warmup" \
            --output json \
            --confirm

          # ─── 4) Trigger the deploy ───────────────────────────────────────────────────
          echo "🚀 Deploying '$SERVICE_NAME' from branch 'main'…"
          render deploys create "$SERVICE_ID" \
            --branch main \
            --output json \
            --confirm